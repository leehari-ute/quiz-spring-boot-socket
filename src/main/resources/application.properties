# PORT
server.port=${PORT:}

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=${DATASOURCE_URL:}
spring.datasource.username=${DATASOURCE_USERNAME:}
spring.datasource.password=${DATASOURCE_PASSWORD:}


#spring.datasource.url=${JDBC_DATABASE_URL:}

#spring.datasource.username=${JDBC_DATABASE_USERNAME:}

#spring.datasource.password=${JDBC_DATABASE_PASSWORD:}

#spring.datasource.driverClassName=${JDBC_DATABASE_DRIVER:}

#Path
server.servlet.context-path=${CONTEXT_PATH:}

# Max size
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:}

#Oauth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}

#Cloudinary
cloudinary.cloud_name=${CLOUDINARY_NAME:}
cloudinary.api_key=${CLOUDINARY_API_KEY:}
cloudinary.api_secret=${CLOUDINARY_API_SECRET:}


# Customize error
#server.error.whitelabel.enabled=false
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
#server.error.path=/error

# Security demo
#spring.security.user.name=admin
#spring.security.user.password=admin
#spring.security.user.roles=ADMIN

#Hibernate
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE


